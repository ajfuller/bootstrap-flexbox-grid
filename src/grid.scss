// Bootstrap screen size variables
$screen-xs: 30rem;
$screen-sm: 48rem;
$screen-md: 62rem;
$screen-lg: 75rem;
$columns: 12;
$block-columns: 6;

$breakpoints: (
  xs: $screen-xs,
  sm: $screen-sm,
  md: $screen-md,
  lg: $screen-lg
) !default;

$breakpoint-classes: (xs sm md lg) !default;

@import 'mixins';
@import 'functions';
 
.container-fluid {
  margin: 1rem auto;
  width: 100%;
  padding-left: 1rem;
  padding-right: 1rem;
}

.container {
  @extend .container-fluid;
  
  @media (min-width: $screen-md) {
    width: $screen-md;
  }
  @media (min-width: $screen-lg) {
    width: $screen-lg;
  }
}

/*

.small-grid-content {
  display: block;
  padding: 0 1rem;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  flex: 1 1;
}
*/

// Enable our flexbox magic
/* block-content */
.row {
  display: flex;
  height: 100vh;
  position: relative;
  flex: 1 1;
  flex-flow: row wrap;
  align-items: stretch;
  justify-content: flex-start;
  order: 0;
  height: auto;
  overflow: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar; 
   margin-left: -1rem;
   margin-right: -1rem;
}

// Generate the actual columns
// TODO: Currently using seperate loops so that we can preserve the cascade, will eventually put into a mixin

/**********************************************
//
// Generate Horizontal Columns
//
**********************************************/

// When we get to doing this as mixin we will need to include these on each class
/*
[class*="col-"] {
  order: 0;
  position: relative;
  flex-flow: row wrap;
  padding-left: 1rem;
  padding-right: 1rem;
}
*/

@for $i from $columns through 1 {
    .col-xs-#{$i} {
      flex: 0 0 ($i/$columns*100%); 
    }
  }
.col-xs-flex {
  flex: 1 1;
}
@media (min-width: $screen-sm) {
  @for $i from $columns through 1 {
     .col-sm-#{$i} {
      flex: 0 0 ($i/$columns*100%); 
    }
  }
  .col-sm-flex {
    flex: 1 1;
  }
}
@media (min-width: $screen-md) {
  @for $i from $columns through 1 {
     .col-md-#{$i} {
      flex: 0 0 ($i/$columns*100%); 
    }
  }
  .col-md-flex {
    flex: 1 1;
  }
}
@media (min-width: $screen-lg) {
  @for $i from $columns through 1 {
     .col-lg-#{$i} {
      flex: 0 0 ($i/$columns*100%); 
    }
  }
  .col-lg-flex {
    flex: 1 1;
  }
}

/**********************************************
//
// Vertical Columns
//
**********************************************/

.vertical {
    flex-flow: column nowrap;
    align-items: stretch;
}

@media only screen and (min-width: $screen-xs) {
    .xs-vertical {
        flex-flow: column nowrap;
        align-items: stretch;
    }
}
@media only screen and (min-width: $screen-sm) {
    .sm-vertical {
        flex-flow: column nowrap;
        align-items: stretch;
    }
}
@media only screen and (min-width: $screen-md) {   
    .md-vertical {
        flex-flow: column nowrap;
        align-items: stretch;
    }
}
@media only screen and (min-width: $screen-lg) { 
    .lg-vertical {
        flex-flow: column nowrap;
        align-items: stretch;
    }
}


/**********************************************
//
// Alignment Classes
//
**********************************************/
.align-left {
  justify-content: flex-start;
  align-self: flex-start;
}

.align-right {
  justify-content: flex-end;
  align-self: flex-end;
}

.align-center {
  justify-content: center;
}

.align-justify {
  justify-content: space-between;   
}

.align-spaced {
  justify-content: space-around;   
}

.align-bottom {
  align-self: flex-end;
}

.align-top {
  align-self: flex-start;
}


/**********************************************
//
// Order Classes
//
**********************************************/

@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from 1 through $columns {  
            .#{$size}-order-#{$i} {
                order: $i; 
            }
        }
    }
}


/**********************************************
//
// Block Columns
//
**********************************************/
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from $block-columns through 1 {
            .col-#{$size}-block-#{$i} {
              flex-flow: row wrap;
              overflow: visible;
              list-style-type: none;

              > li,
              > div,
              > section {
                padding: 0 1rem 1rem;
                flex: 0 0 percentage(1 / $i);
              }
            }
        }
    }
}



/**********************************************
//
// Rando Utilities
//
**********************************************/

.visible-xs,
.visible-sm,
.visible-md,
.visible-lg {
  display: none !important;
}

@media (max-width: $screen-sm) {
  .hidden-xs {
    display: none !important;
  }
  .visible-xs {
    display: block !important;
  }
}
@media (min-width: $screen-sm) and (max-width: $screen-md) {
  .hidden-sm {
    display: none !important;
  }
  .visible-sm {
    display: block !important;
  }
}
@media (min-width: $screen-md) and (max-width: $screen-lg) {
  .hidden-md {
    display: none !important;
  }
  .visible-md {
    display: block !important;
  }
    
}
@media (min-width: $screen-lg) {
  .hidden-lg {
    display: none !important;
  }
  .visible-lg {
    display: block !important;
  }
}

.shrink {
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto; 
}
